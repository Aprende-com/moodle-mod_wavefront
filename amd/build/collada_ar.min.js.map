{"version":3,"file":"collada_ar.min.js","sources":["../src/collada_ar.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Encapsules the behavior for creating a Wavefront 3D model in Moodle.\n *\n * Manages the UI while operations are occuring, including rendering and manipulating the model.\n *\n * @module     mod_wavefront/collada_ar\n * @class      ar_renderer\n * @package    mod_wavefront\n * @copyright  2022 Ian Wild\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.9\n */\n\nimport * as THREE from 'mod_wavefront/three';\nimport { ColladaLoader } from 'mod_wavefront/ColladaLoader';\nimport { ARButton } from 'mod_wavefront/ARButton';\nimport jQuery from 'jquery';\n\nlet camera, scene, renderer, mixer, clock;\nlet controller;\n\nlet reticle;\nlet object;\nlet objectscale;\n\nlet hitTestSource = null;\nlet hitTestSourceRequested = false;\n\n\nexport const init = (stage, scale) => {\n\n\tvar container = document.getElementById(stage);\n    console.log(container);\n    \n    // Object vector scaling\n    objectscale = scale;\n    \n    // Get model files\n\tvar baseurl = jQuery(container).attr(\"data-baseurl\");\n\tvar base_url = decodeURIComponent(baseurl);\n\tconsole.log(base_url);\n\t\n\tvar dae = jQuery(container).attr(\"data-dae\");\n\tvar dae_file = decodeURIComponent(dae);\n\tconsole.log(dae_file);\n\t\n\t// Get camera attributes\n\tvar cameraangle = jQuery(container).attr(\"data-cameraangle\");\n    console.log(cameraangle);\n\tvar camerafar = jQuery(container).attr(\"data-camerafar\");\n\tconsole.log(camerafar);\n\tvar camerax = jQuery(container).attr(\"data-camerax\");\n\tconsole.log(camerax);\n\tvar cameray = jQuery(container).attr(\"data-cameray\");\n\tconsole.log(cameray);\n\tvar cameraz = jQuery(container).attr(\"data-cameraz\");\n\tconsole.log(cameraz);\n\n\tscene = new THREE.Scene();\n\n\tvar VIEW_ANGLE = Number(cameraangle), ASPECT = window.innerWidth / window.innerHeight, NEAR = 0.1, FAR = Number(camerafar);\n\tcamera = new THREE.PerspectiveCamera( VIEW_ANGLE, ASPECT, NEAR, FAR);\n\tcamera.position.set(Number(camerax),Number(cameray),Number(cameraz));\t\n\n\t// Lighting\n\tvar keyLight = new THREE.DirectionalLight(new THREE.Color('hsl(30, 100%, 75%)'), 1.0);\n\tkeyLight.position.set(-100, 0, 100);\n\t\t\t\n\tvar fillLight = new THREE.DirectionalLight(new THREE.Color('hsl(240, 100%, 75%)'), 0.75);\n\tfillLight.position.set(100, 0, 100);\n\t\t\t\n\tvar backLight = new THREE.DirectionalLight(0xffffff, 1.0);\n\tbackLight.position.set(100, 0, -100).normalize();\n\n\tscene.add(keyLight);\n\tscene.add(fillLight);\n\tscene.add(backLight);\n\t\n\t//\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true, alpha: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.xr.enabled = true;\n\tcontainer.appendChild( renderer.domElement );\n\n    //\n    \n    renderer.xr.addEventListener('sessionend', function ( event ) {\n    \tscene.remove( object );\n\t\tscene.add( reticle );\n\t\treticle.visible = false;\n\t\tcontroller.addEventListener( 'select', onSelect );\n\t});\n    \n\t//\n\n\tdocument.body.appendChild( ARButton.createButton( renderer, { requiredFeatures: [ 'hit-test' ] } ) );\n\n\t//\n\n\tfunction onSelect() {\n\n\t\tif ( reticle.visible ) {\n\n\t\t\t/* Load model */\n\t\t\tvar daeLoader = new ColladaLoader();\n    \t\tdaeLoader.load(dae_file, (collada) => {\n\n\t\t\t\tvar animations = collada.animations;\n\t\t\t\tvar avatar = collada.scene;\n\n\t\t\t\tavatar.traverse( function ( node ) {\n\t\t\n\t\t\t\t\tif ( node.isSkinnedMesh ) {\n\t\t\n\t\t\t\t\t\tnode.frustumCulled = false;\n\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t} );\n\n\t\t\t\tmixer = new THREE.AnimationMixer( avatar );\n\t\t\t\t\n\t\t\t\tvar action = mixer.clipAction( animations[ 0 ] ).play();\n\n\t\t\t\treticle.matrix.decompose( avatar.position, avatar.quaternion, avatar.scale );\n\t\t        avatar.scale.set(objectscale,objectscale,objectscale);\n\t\t\t\tscene.add( avatar );\n\t\t\t\t\n\t\t\t\tvar iCol = Number(\"0x\" + backcol); \n\t\t        scene.background = new THREE.Color(iCol);\n\t\t\t\t\n\t\t\t\tvar ambientLight = new THREE.AmbientLight( 0xffffff, 0.2 );\n\t\t\t\tambients.push[ambientLight];\n\t\t\t\tscene.add( ambientLight );\n\t\t\n\t\t\t\tvar pointLight = new THREE.PointLight( 0xffffff, 0.8 );\n\t\t\t\tpointlights.push[pointLight];\n\t\t\n\t\t\t\tscene.add( camera );\n\t\t\t\tcamera.add( pointLight );\n\t\t\t\n\t\t\t\tcontroller.removeEventListener( 'select', onSelect );\n\t\t\t\tscene.remove(reticle);\n\n\t\t\t});\n\t\t}\n\t}\n\n\tcontroller = renderer.xr.getController( 0 );\n\tcontroller.addEventListener( 'select', onSelect );\n\tscene.add( controller );\n\n\treticle = new THREE.Mesh(\n\t\tnew THREE.RingGeometry( 0.15, 0.2, 32 ).rotateX( - Math.PI / 2 ),\n\t\tnew THREE.MeshBasicMaterial()\n\t);\n\treticle.matrixAutoUpdate = false;\n\treticle.visible = false;\n\tscene.add( reticle );\n\n\t//\n\n\twindow.addEventListener( 'resize', onWindowResize );\n\n    animate();\n}\n\nfunction onWindowResize() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n}\n\n//\n\nconst render = ( timestamp, frame ) => {\n\tif ( frame ) {\n\n\t\tconst referenceSpace = renderer.xr.getReferenceSpace();\n\t\tconst session = renderer.xr.getSession();\n\n\t\tif ( hitTestSourceRequested === false ) {\n\n\t\t\tsession.requestReferenceSpace( 'viewer' ).then( function ( referenceSpace ) {\n\n\t\t\t\tsession.requestHitTestSource( { space: referenceSpace } ).then( function ( source ) {\n\n\t\t\t\t\thitTestSource = source;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t\tsession.addEventListener( 'end', function () {\n\n\t\t\t\thitTestSourceRequested = false;\n\t\t\t\thitTestSource = null;\n\n\t\t\t} );\n\n\t\t\thitTestSourceRequested = true;\n\n\t\t}\n\n\t\tif ( hitTestSource ) {\n\n\t\t\tconst hitTestResults = frame.getHitTestResults( hitTestSource );\n\n\t\t\tif ( hitTestResults.length ) {\n\n\t\t\t\tconst hit = hitTestResults[ 0 ];\n\n\t\t\t\treticle.visible = true;\n\t\t\t\treticle.matrix.fromArray( hit.getPose( referenceSpace ).transform.matrix );\n\n\t\t\t} else {\n\n\t\t\t\treticle.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tvar delta = clock.getDelta();\n\t\n\tmixer.update( delta );\n\n    renderer.render(scene, camera);\n}\n\nconst animate = () => {\n\t\n\trequestAnimationFrame( animate );\n\n\trender();\n}\n"],"names":["camera","scene","renderer","mixer","controller","reticle","objectscale","hitTestSource","hitTestSourceRequested","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","stage","scale","container","document","getElementById","console","log","baseurl","attr","base_url","decodeURIComponent","dae","dae_file","cameraangle","camerafar","camerax","cameray","cameraz","THREE","Scene","VIEW_ANGLE","Number","ASPECT","FAR","PerspectiveCamera","position","set","keyLight","DirectionalLight","Color","fillLight","backLight","onSelect","visible","ColladaLoader","load","collada","animations","avatar","traverse","node","isSkinnedMesh","frustumCulled","AnimationMixer","clipAction","play","matrix","decompose","quaternion","add","iCol","backcol","background","ambientLight","AmbientLight","ambients","push","pointLight","PointLight","pointlights","removeEventListener","remove","normalize","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","xr","enabled","appendChild","domElement","addEventListener","event","object","body","ARButton","createButton","requiredFeatures","getController","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","animate","requestAnimationFrame","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","length","hit","fromArray","getPose","transform","delta","clock","getDelta","update","render"],"mappings":"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"}